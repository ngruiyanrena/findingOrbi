[{"/Users/rena.ele/Desktop/findingorbi4/src/App.js":"1","/Users/rena.ele/Desktop/findingorbi4/src/pages/home.js":"2","/Users/rena.ele/Desktop/findingorbi4/src/component/Navbar.js":"3","/Users/rena.ele/Desktop/findingorbi4/src/pages/FindingGroupmates.js":"4","/Users/rena.ele/Desktop/findingorbi4/src/pages/AboutUs.js":"5","/Users/rena.ele/Desktop/findingorbi4/src/pages/Profile.js":"6","/Users/rena.ele/Desktop/findingorbi4/src/index.js":"7","/Users/rena.ele/Desktop/findingorbi4/src/reportWebVitals.js":"8","/Users/rena.ele/Desktop/findingorbi4/src/client.js":"9","/Users/rena.ele/Desktop/findingorbi4/src/component/Box.js":"10","/Users/rena.ele/Desktop/findingorbi4/src/component/Drawer.js":"11"},{"size":650,"mtime":1654861999268,"results":"12","hashOfConfig":"13"},{"size":626,"mtime":1654861999268,"results":"14","hashOfConfig":"13"},{"size":1549,"mtime":1654861999299,"results":"15","hashOfConfig":"13"},{"size":2389,"mtime":1654862083195,"results":"16","hashOfConfig":"13"},{"size":597,"mtime":1654862849943,"results":"17","hashOfConfig":"13"},{"size":4788,"mtime":1654867426079,"results":"18","hashOfConfig":"13"},{"size":535,"mtime":1654847075236,"results":"19","hashOfConfig":"13"},{"size":362,"mtime":1654847075236,"results":"20","hashOfConfig":"13"},{"size":357,"mtime":1654847075236,"results":"21","hashOfConfig":"13"},{"size":253,"mtime":1654847075236,"results":"22","hashOfConfig":"13"},{"size":1781,"mtime":1654855246072,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"5e0fme",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/rena.ele/Desktop/findingorbi4/src/App.js",[],[],[],"/Users/rena.ele/Desktop/findingorbi4/src/pages/home.js",[],[],"/Users/rena.ele/Desktop/findingorbi4/src/component/Navbar.js",[],[],"/Users/rena.ele/Desktop/findingorbi4/src/pages/FindingGroupmates.js",[],[],"/Users/rena.ele/Desktop/findingorbi4/src/pages/AboutUs.js",[],[],"/Users/rena.ele/Desktop/findingorbi4/src/pages/Profile.js",["59"],[],"// import { Typography } from \"@material-ui/core\";\n\n// function Profile() {\n//   return <Typography>This is the profile</Typography>;\n// }\n// export default Profile;\n\nimport '../App.css';\nimport { useState, useEffect } from 'react'\nimport { supabase } from '../client'\n//import RadioGrouped from '../component/radio'\nimport Box from \"../component/Box\";\n//import { Button } from \"@supabase/ui\";\nimport { Button } from \"@material-ui/core\";\nimport { Input } from \"@supabase/ui\";\n\n\nimport * as React from 'react';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\n// import FormLabel from '@mui/material/FormLabel';\n\nfunction Profile() {\n  const [profiles, setProfiles] = useState([])\n  const [profile, setProfile] = useState({ Major: \"\", StudyYear: \"\", OwnWorkStyle: \"\", AvailDays: \"\"})\n  const { Major, StudyYear, OwnWorkStyle, AvailDays } = profile\n \n  useEffect(() => {\n    fetchProfiles()\n  }, [])\n \n  async function fetchProfiles() {\n    const { data } = await supabase\n        .from('profile')\n        .select() //select all profiles\n      setProfiles(data)\n      console.log(\"data: \", data) // to check how the data looks like\n  }\n\n  async function createProfile() {\n    await supabase\n      .from('profile')\n      .insert([\n        { Major, StudyYear, OwnWorkStyle, AvailDays }\n      ])\n      .single()\n    //setProfile({ Major: \"\", StudyYear: \"\", OwnWorkStyle: \"\", AvailDays: \"\" })\n    fetchProfiles()\n  }\n\n \n  return (\n    <div className=\"App\">\n\n    <h1> Profile </h1>\n\n\n    <Box>\n      <h4> Please input your major: </h4>\n      <Input\n        placeholder=\"eg: Business Analytics\"\n        value={Major} \n        onChange={e => setProfile({ ...profile, Major: e.target.value})}\n        //onchange handler as the user types\n      />\n    </Box>\n\n    <Box>\n      <h4> Please input your Year Of Study: </h4>\n      <Input\n        placeholder=\"eg: 1\"\n        value={StudyYear} \n        onChange={e => setProfile({ ...profile, StudyYear: e.target.value})}\n        //onchange handler as the user types\n      />\n    </Box>\n\n    <Box>\n      <h4> Please input your Personal Working Style: </h4>\n      <FormControl>\n        <RadioGroup\n          row\n          onChange={e => setProfile({ ...profile, OwnWorkStyle1: e.target.value})}\n        >\n          <FormControlLabel value=\"Team Member\" control={<Radio />} label=\"Team Member\" />\n          <FormControlLabel value=\"Team Leader\" control={<Radio />} label=\"Team Leader\" />\n        </RadioGroup>\n        <RadioGroup\n          row\n          onChange={e => setProfile({ ...profile, OwnWorkStyle2: e.target.value})}\n        >\n          <FormControlLabel value=\"Supportive\" control={<Radio />} label=\"Supportive\" />\n          <FormControlLabel value=\"Take Charge\" control={<Radio />} label=\"Take Charge\" />\n        </RadioGroup>\n        <RadioGroup\n          row\n          onChange={e => setProfile({ ...profile, OwnWorkStyle3: e.target.value})}\n        >\n          <FormControlLabel value=\"Organised\" control={<Radio />} label=\"Organised\" />\n          <FormControlLabel value=\"Spontaneous\" control={<Radio />} label=\"Spontaneous\" />\n        </RadioGroup>\n        <RadioGroup\n          row\n          onChange={e => setProfile({ ...profile, OwnWorkStyle4: e.target.value})}\n        >\n          <FormControlLabel value=\"Detail Oriented\" control={<Radio />} label=\"Detail Oriented\" />\n          <FormControlLabel value=\"Broad Perspective\" control={<Radio />} label=\"Broad Perspective\" />\n        </RadioGroup>\n        <RadioGroup\n          row\n          onChange={e => setProfile({ ...profile, OwnWorkStyle5: e.target.value})}\n        >\n          <FormControlLabel value=\"Creative\" control={<Radio />} label=\"Creative\" />\n          <FormControlLabel value=\"Strategic\" control={<Radio />} label=\"Strategic\" />\n        </RadioGroup>\n      </FormControl>\n    </Box>\n\n    <Box>\n      <h4> Please input your Available Days: </h4> \n      <p> where Monday = 1, Tuesday = 2, Wednesday = 3, Thursday = 4, </p>\n      <p> Friday = 5, Saturday = 6, Sunday = 7 </p>\n      <Input\n        placeholder=\"eg: 123\"\n        value={AvailDays} \n        onChange={e => setProfile({ ...profile, AvailDays: e.target.value})}\n        //onchange handler as the user types\n      />\n    </Box>\n\n    <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={createProfile}>Save Profile</Button>\n      {/* {\n        profiles.map(profile => (\n          <div key={profile.id}>\n            <h3>{profile.Major}</h3>\n            <p>{profile.StudyYear}</p>\n            <p>{profile.OwnWorkStyle}</p>\n            <p>{profile.AvailDays}</p>\n          </div>\n        ))\n      }  */}\n    </div>\n  );\n}\nexport default Profile;","/Users/rena.ele/Desktop/findingorbi4/src/index.js",[],[],"/Users/rena.ele/Desktop/findingorbi4/src/reportWebVitals.js",[],[],"/Users/rena.ele/Desktop/findingorbi4/src/client.js",[],[],"/Users/rena.ele/Desktop/findingorbi4/src/component/Box.js",[],[],"/Users/rena.ele/Desktop/findingorbi4/src/component/Drawer.js",[],[],{"ruleId":"60","severity":1,"message":"61","line":26,"column":10,"nodeType":"62","messageId":"63","endLine":26,"endColumn":18},"no-unused-vars","'profiles' is assigned a value but never used.","Identifier","unusedVar"]