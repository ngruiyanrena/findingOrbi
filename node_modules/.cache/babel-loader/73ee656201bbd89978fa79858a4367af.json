{"ast":null,"code":"var _jsxFileName = \"/Users/grace/supabase-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { supabase } from './client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [post, setPost] = useState({\n    ModuleCode: \"\",\n    MemberNo: \"\",\n    WorkStylePref: \"\"\n  });\n  const {\n    ModuleCode,\n    MemberNo,\n    WorkStylePref\n  } = post;\n  const [profiles, setProfiles] = useState([]);\n  const [profile, setProfile] = useState({\n    Major: \"\",\n    StudyYear: \"\",\n    OwnWorkStyle: \"\",\n    AvailDays: \"\"\n  });\n  const {\n    Major,\n    StudyYear,\n    OwnWorkStyle,\n    AvailDays\n  } = profile;\n  useEffect(() => {\n    fetchPosts();\n  }, []); // call fetchpost function when application loads\n\n  useEffect(() => {\n    fetchProfiles();\n  }, []);\n\n  async function fetchPosts() {\n    const {\n      data\n    } = await supabase.from('posts').select(); //select all posts\n\n    setPosts(data);\n    console.log(\"data: \", data); // to check how the data looks like\n  }\n\n  async function fetchProfiles() {\n    const {\n      data\n    } = await supabase.from('profile').select(); //select all profiles\n\n    setProfiles(data);\n    console.log(\"data: \", data); // to check how the data looks like\n  }\n\n  async function createProfile() {\n    await supabase.from('profile').insert([{\n      Major,\n      StudyYear,\n      OwnWorkStyle,\n      AvailDays\n    }]).single();\n    setProfile({\n      Major: \"\",\n      StudyYear: \"\",\n      OwnWorkStyle: \"\",\n      AvailDays: \"\"\n    });\n    fetchProfiles();\n  }\n\n  async function createPost() {\n    await supabase.from('posts') //insert individual post input by the user\n    .insert([{\n      ModuleCode,\n      MemberNo,\n      WorkStylePref\n    }]).single();\n    setPost({\n      ModuleCode: \"\",\n      MemberNo: \"\",\n      WorkStylePref: \"\"\n    }); // setpost for once post created call setpost to reset the form fields\n\n    fetchPosts(); //fetchpost to update the ui with the new post\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"ModuleCode\",\n      value: ModuleCode,\n      onChange: e => setPost({ ...post,\n        ModuleCode: e.target.value\n      }) //onchange handler as the user types\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"MemberNo\",\n      value: MemberNo,\n      onChange: e => setPost({ ...post,\n        MemberNo: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"WorkStylePref\",\n      value: WorkStylePref,\n      onChange: e => setPost({ ...post,\n        WorkStylePref: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createPost,\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.Major\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.StudyYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.OwnWorkStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.AvailDays\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ka4dm3TuGu/caSfrwuqBku69Svg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","supabase","App","posts","setPosts","post","setPost","ModuleCode","MemberNo","WorkStylePref","profiles","setProfiles","profile","setProfile","Major","StudyYear","OwnWorkStyle","AvailDays","fetchPosts","fetchProfiles","data","from","select","console","log","createProfile","insert","single","createPost","e","target","value","map","id"],"sources":["/Users/grace/supabase-react/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react'\nimport { supabase } from './client'\n\nfunction App() {\n  const [posts, setPosts] = useState([])\n  const [post, setPost] = useState({ ModuleCode: \"\", MemberNo: \"\", WorkStylePref: \"\"})\n  const { ModuleCode, MemberNo, WorkStylePref } = post\n  const [profiles, setProfiles] = useState([])\n  const [profile, setProfile] = useState({ Major: \"\", StudyYear: \"\", OwnWorkStyle: \"\", AvailDays: \"\"})\n  const { Major, StudyYear, OwnWorkStyle, AvailDays } = profile\n  useEffect(() => {\n    fetchPosts()\n  }, []) // call fetchpost function when application loads\n  useEffect(() => {\n    fetchProfiles()\n  }, [])\n  async function fetchPosts() {\n    const { data } = await supabase\n        .from('posts')\n        .select() //select all posts\n      setPosts(data)\n      console.log(\"data: \", data) // to check how the data looks like\n  }\n  async function fetchProfiles() {\n    const { data } = await supabase\n        .from('profile')\n        .select() //select all profiles\n      setProfiles(data)\n      console.log(\"data: \", data) // to check how the data looks like\n  }\n\n  async function createProfile() {\n    await supabase\n      .from('profile')\n      .insert([\n        { Major, StudyYear, OwnWorkStyle, AvailDays }\n      ])\n      .single()\n    setProfile({ Major: \"\", StudyYear: \"\", OwnWorkStyle: \"\", AvailDays: \"\" })\n    fetchProfiles()\n  }\n\n  async function createPost() {\n    await supabase\n      .from('posts') //insert individual post input by the user\n      .insert([\n        { ModuleCode, MemberNo, WorkStylePref }\n      ])\n      .single()\n    setPost({ ModuleCode: \"\", MemberNo: \"\", WorkStylePref: \"\" }) \n    // setpost for once post created call setpost to reset the form fields\n    fetchPosts() \n    //fetchpost to update the ui with the new post\n  }\n  return (\n    <div className=\"App\">\n      <input\n        placeholder=\"ModuleCode\"\n        value={ModuleCode} \n        onChange={e => setPost({ ...post, ModuleCode: e.target.value})}\n        //onchange handler as the user types\n      />\n      <input\n        placeholder=\"MemberNo\"\n        value={MemberNo}\n        onChange={e => setPost({ ...post, MemberNo: e.target.value})}\n      />\n      <input\n        placeholder=\"WorkStylePref\"\n        value={WorkStylePref}\n        onChange={e => setPost({ ...post, WorkStylePref: e.target.value})}\n      />\n      <button onClick={createPost}>Create Post</button>\n      {\n        posts.map(post => (\n          <div key={post.id}>\n            <h3>{post.Major}</h3>\n            <p>{post.StudyYear}</p>\n            <p>{post.OwnWorkStyle}</p>\n            <p>{post.AvailDays}</p>\n          </div>\n        ))\n      }\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}